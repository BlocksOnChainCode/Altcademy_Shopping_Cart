/** 
* ?   A Mixin is in it's essence a reusable set of css rules.
* !   Keep the mixins rather small. 
*
* TODO   analyse my SCSS to see if any duplicate rules can be turned into a *        mixin 
*/
tr {
  border-bottom: gray;
}

table {
  width: 100vw;
}

.table th,
.table td {
  padding: 1rem;
  border-radius: 0.5rem;
}

.table thead th {
  background-color: #f7f7f7;
}

input[type=number],
input[type=text] {
  width: 5rem;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 0.5rem;
  text-align: center;
}

button {
  padding: 0.5rem 1rem;
  background-color: #2196f3;
  color: #fff;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
}

#create-item-form {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
}

#create-item-form input[type=text],
#create-item-form input[type=number] {
  width: 20%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 0.5rem;
  margin-right: 1rem;
}

/*
@mixin centerContent {
  display: flex;
  justify-content: center;;
  align-items: center;
}

body {
  background: #161313;

}


.table {
  margin: 0 auto;
  //background: rgb(209,84,31);
  background: linear-gradient(234deg, rgba(209,84,31,1) 0%, rgba(245,155,71,1) 18%, rgba(183,145,109,1) 100%);
  border: 2px solid gray;
  border-radius: 0 0 25px 25px;
}

#create-item-form {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  width: 100%;

  background-color:#161313;
}

#plusButton {
  @include centerContent();
  font-size: 50px;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 5px solid;
  background-image: linear-gradient(234deg, rgba(209,84,31,1) 0%, rgba(245,155,71,1) 18%, rgba(183,145,109,1) 100%);
  border: 5px solid;
  background-color: transparent;

  border-radius: 50%;
}*//*# sourceMappingURL=style.css.map */