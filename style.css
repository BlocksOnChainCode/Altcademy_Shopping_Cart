/** 
* ?   A Mixin is in it's essence a reusable set of css rules.
* !   Keep the mixins rather small. 
*
* TODO   analyse my SCSS to see if any duplicate rules can be turned into a *        mixin 
*/
body {
  background: #161313;
}

header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 80%;
  margin-left: 10%;
  margin-top: 20px;
  border-radius: 25px 25px 0 0;
  border: solid 1px gray;
  background: rgb(209, 84, 31);
  background: linear-gradient(234deg, rgb(209, 84, 31) 0%, rgb(245, 155, 71) 18%, rgb(183, 145, 109) 100%);
}

.table {
  width: 80%;
  margin-left: 10%;
  background: rgb(209, 84, 31);
  background: linear-gradient(234deg, rgb(209, 84, 31) 0%, rgb(245, 155, 71) 18%, rgb(183, 145, 109) 100%);
  border: 2px solid gray;
  border-radius: 0 0 25px 25px;
}

#create-item-form {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  width: 100%;
  background-color: #161313;
}

#plusButton {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 50px;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 5px solid;
  background-image: linear-gradient(234deg, rgb(209, 84, 31) 0%, rgb(245, 155, 71) 18%, rgb(183, 145, 109) 100%);
  border: 5px solid;
  background-color: transparent;
  border-radius: 50%;
}/*# sourceMappingURL=style.css.map */